// Code generated by protoc-gen-go. DO NOT EDIT.
// source: disasm.proto

package disasm

import (
	context "context"
	fmt "fmt"
	math "math"

	binpb "github.com/lapsang-boys/pippi/proto/bin"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DisassembleRequest struct {
	// Binary executable ID (lowercase sha256 hash).
	BinId                string   `protobuf:"bytes,1,opt,name=bin_id,json=binId,proto3" json:"bin_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisassembleRequest) Reset()         { *m = DisassembleRequest{} }
func (m *DisassembleRequest) String() string { return proto.CompactTextString(m) }
func (*DisassembleRequest) ProtoMessage()    {}
func (*DisassembleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e5f4681fd36f22f, []int{0}
}

func (m *DisassembleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisassembleRequest.Unmarshal(m, b)
}
func (m *DisassembleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisassembleRequest.Marshal(b, m, deterministic)
}
func (m *DisassembleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisassembleRequest.Merge(m, src)
}
func (m *DisassembleRequest) XXX_Size() int {
	return xxx_messageInfo_DisassembleRequest.Size(m)
}
func (m *DisassembleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DisassembleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DisassembleRequest proto.InternalMessageInfo

func (m *DisassembleRequest) GetBinId() string {
	if m != nil {
		return m.BinId
	}
	return ""
}

type DisassembleReply struct {
	// Executable sections.
	ExecSections         []*DisassembleSection `protobuf:"bytes,1,rep,name=exec_sections,json=execSections,proto3" json:"exec_sections,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *DisassembleReply) Reset()         { *m = DisassembleReply{} }
func (m *DisassembleReply) String() string { return proto.CompactTextString(m) }
func (*DisassembleReply) ProtoMessage()    {}
func (*DisassembleReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e5f4681fd36f22f, []int{1}
}

func (m *DisassembleReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisassembleReply.Unmarshal(m, b)
}
func (m *DisassembleReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisassembleReply.Marshal(b, m, deterministic)
}
func (m *DisassembleReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisassembleReply.Merge(m, src)
}
func (m *DisassembleReply) XXX_Size() int {
	return xxx_messageInfo_DisassembleReply.Size(m)
}
func (m *DisassembleReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DisassembleReply.DiscardUnknown(m)
}

var xxx_messageInfo_DisassembleReply proto.InternalMessageInfo

func (m *DisassembleReply) GetExecSections() []*DisassembleSection {
	if m != nil {
		return m.ExecSections
	}
	return nil
}

type DisassembleSection struct {
	// Underlying section (or segment) of the exectuable.
	Section *binpb.Section `protobuf:"bytes,1,opt,name=section,proto3" json:"section,omitempty"`
	// Valid byte offsets for assembly instructions.
	ValidOffsets         []uint64 `protobuf:"varint,2,rep,packed,name=valid_offsets,json=validOffsets,proto3" json:"valid_offsets,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisassembleSection) Reset()         { *m = DisassembleSection{} }
func (m *DisassembleSection) String() string { return proto.CompactTextString(m) }
func (*DisassembleSection) ProtoMessage()    {}
func (*DisassembleSection) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e5f4681fd36f22f, []int{2}
}

func (m *DisassembleSection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisassembleSection.Unmarshal(m, b)
}
func (m *DisassembleSection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisassembleSection.Marshal(b, m, deterministic)
}
func (m *DisassembleSection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisassembleSection.Merge(m, src)
}
func (m *DisassembleSection) XXX_Size() int {
	return xxx_messageInfo_DisassembleSection.Size(m)
}
func (m *DisassembleSection) XXX_DiscardUnknown() {
	xxx_messageInfo_DisassembleSection.DiscardUnknown(m)
}

var xxx_messageInfo_DisassembleSection proto.InternalMessageInfo

func (m *DisassembleSection) GetSection() *binpb.Section {
	if m != nil {
		return m.Section
	}
	return nil
}

func (m *DisassembleSection) GetValidOffsets() []uint64 {
	if m != nil {
		return m.ValidOffsets
	}
	return nil
}

func init() {
	proto.RegisterType((*DisassembleRequest)(nil), "disasm.DisassembleRequest")
	proto.RegisterType((*DisassembleReply)(nil), "disasm.DisassembleReply")
	proto.RegisterType((*DisassembleSection)(nil), "disasm.DisassembleSection")
}

func init() { proto.RegisterFile("disasm.proto", fileDescriptor_7e5f4681fd36f22f) }

var fileDescriptor_7e5f4681fd36f22f = []byte{
	// 228 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0x87, 0x8d, 0xd5, 0x48, 0x27, 0x5b, 0x90, 0x01, 0x21, 0xe4, 0x14, 0x22, 0x48, 0x40, 0xc8,
	0x21, 0x3e, 0x80, 0x17, 0x3d, 0x78, 0x12, 0x52, 0x3c, 0x87, 0x6c, 0x33, 0x85, 0x85, 0xed, 0x6e,
	0xec, 0xac, 0x62, 0xdf, 0x5e, 0x92, 0xdd, 0x42, 0x0a, 0x39, 0xfe, 0xbe, 0xf9, 0xf7, 0x31, 0x20,
	0x7a, 0xc5, 0x1d, 0x1f, 0xaa, 0xe1, 0x68, 0x9d, 0xc5, 0xd8, 0xa7, 0x6c, 0x2d, 0x95, 0xf1, 0xa8,
	0x78, 0x06, 0x7c, 0x1b, 0x21, 0xd3, 0x41, 0x6a, 0x6a, 0xe8, 0xfb, 0x87, 0xd8, 0xe1, 0x03, 0xc4,
	0x52, 0x99, 0x56, 0xf5, 0x69, 0x94, 0x47, 0xe5, 0xba, 0xb9, 0x95, 0xca, 0x7c, 0xf4, 0xc5, 0x16,
	0xee, 0x2f, 0x9a, 0x07, 0x7d, 0xc2, 0x57, 0xd8, 0xd0, 0x1f, 0xed, 0x5a, 0xa6, 0x9d, 0x53, 0xd6,
	0x70, 0x1a, 0xe5, 0xab, 0x32, 0xa9, 0xb3, 0x2a, 0x5c, 0x9e, 0x0d, 0x6c, 0x7d, 0x4b, 0x23, 0xc6,
	0x81, 0x10, 0xb8, 0xe8, 0x2e, 0x0c, 0x02, 0xc6, 0x27, 0xb8, 0x0b, 0x1b, 0x27, 0x85, 0xa4, 0x16,
	0xd5, 0x28, 0x7d, 0x5e, 0x71, 0x2e, 0xe2, 0x23, 0x6c, 0x7e, 0x3b, 0xad, 0xfa, 0xd6, 0xee, 0xf7,
	0x4c, 0x8e, 0xd3, 0xeb, 0x7c, 0x55, 0xde, 0x34, 0x62, 0x82, 0x9f, 0x9e, 0xd5, 0x5f, 0x20, 0x66,
	0x27, 0x8e, 0xf8, 0x0e, 0xc9, 0x2c, 0xe3, 0x92, 0x6b, 0xf8, 0x44, 0x96, 0x2e, 0xd6, 0x06, 0x7d,
	0x2a, 0xae, 0x64, 0x3c, 0xbd, 0xf0, 0xe5, 0x3f, 0x00, 0x00, 0xff, 0xff, 0xff, 0x6e, 0x84, 0x18,
	0x65, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DisassemblerClient is the client API for Disassembler service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DisassemblerClient interface {
	Disassemble(ctx context.Context, in *DisassembleRequest, opts ...grpc.CallOption) (*DisassembleReply, error)
}

type disassemblerClient struct {
	cc *grpc.ClientConn
}

func NewDisassemblerClient(cc *grpc.ClientConn) DisassemblerClient {
	return &disassemblerClient{cc}
}

func (c *disassemblerClient) Disassemble(ctx context.Context, in *DisassembleRequest, opts ...grpc.CallOption) (*DisassembleReply, error) {
	out := new(DisassembleReply)
	err := c.cc.Invoke(ctx, "/disasm.Disassembler/Disassemble", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DisassemblerServer is the server API for Disassembler service.
type DisassemblerServer interface {
	Disassemble(context.Context, *DisassembleRequest) (*DisassembleReply, error)
}

// UnimplementedDisassemblerServer can be embedded to have forward compatible implementations.
type UnimplementedDisassemblerServer struct {
}

func (*UnimplementedDisassemblerServer) Disassemble(ctx context.Context, req *DisassembleRequest) (*DisassembleReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Disassemble not implemented")
}

func RegisterDisassemblerServer(s *grpc.Server, srv DisassemblerServer) {
	s.RegisterService(&_Disassembler_serviceDesc, srv)
}

func _Disassembler_Disassemble_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisassembleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DisassemblerServer).Disassemble(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/disasm.Disassembler/Disassemble",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DisassemblerServer).Disassemble(ctx, req.(*DisassembleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Disassembler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "disasm.Disassembler",
	HandlerType: (*DisassemblerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Disassemble",
			Handler:    _Disassembler_Disassemble_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "disasm.proto",
}
