// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bin.proto

package bin

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Access permissions.
type Perm int32

const (
	// PermR specifies that the memory is readable.
	Perm_PermR Perm = 0
	// PermW specifies that the memory is writeable.
	Perm_PermW Perm = 1
	// PermX specifies that the memory is executable.
	Perm_PermX Perm = 2
)

var Perm_name = map[int32]string{
	0: "PermR",
	1: "PermW",
	2: "PermX",
}

var Perm_value = map[string]int32{
	"PermR": 0,
	"PermW": 1,
	"PermX": 2,
}

func (x Perm) String() string {
	return proto.EnumName(Perm_name, int32(x))
}

func (Perm) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_af36b52e36742298, []int{0}
}

type ParseBinaryRequest struct {
	// Binary executable ID (lowercase sha256 hash).
	BinId                string   `protobuf:"bytes,1,opt,name=bin_id,json=binId,proto3" json:"bin_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ParseBinaryRequest) Reset()         { *m = ParseBinaryRequest{} }
func (m *ParseBinaryRequest) String() string { return proto.CompactTextString(m) }
func (*ParseBinaryRequest) ProtoMessage()    {}
func (*ParseBinaryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_af36b52e36742298, []int{0}
}

func (m *ParseBinaryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParseBinaryRequest.Unmarshal(m, b)
}
func (m *ParseBinaryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParseBinaryRequest.Marshal(b, m, deterministic)
}
func (m *ParseBinaryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParseBinaryRequest.Merge(m, src)
}
func (m *ParseBinaryRequest) XXX_Size() int {
	return xxx_messageInfo_ParseBinaryRequest.Size(m)
}
func (m *ParseBinaryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ParseBinaryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ParseBinaryRequest proto.InternalMessageInfo

func (m *ParseBinaryRequest) GetBinId() string {
	if m != nil {
		return m.BinId
	}
	return ""
}

type ParseBinaryReply struct {
	Sections             []*Section `protobuf:"bytes,1,rep,name=sections,proto3" json:"sections,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ParseBinaryReply) Reset()         { *m = ParseBinaryReply{} }
func (m *ParseBinaryReply) String() string { return proto.CompactTextString(m) }
func (*ParseBinaryReply) ProtoMessage()    {}
func (*ParseBinaryReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_af36b52e36742298, []int{1}
}

func (m *ParseBinaryReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParseBinaryReply.Unmarshal(m, b)
}
func (m *ParseBinaryReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParseBinaryReply.Marshal(b, m, deterministic)
}
func (m *ParseBinaryReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParseBinaryReply.Merge(m, src)
}
func (m *ParseBinaryReply) XXX_Size() int {
	return xxx_messageInfo_ParseBinaryReply.Size(m)
}
func (m *ParseBinaryReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ParseBinaryReply.DiscardUnknown(m)
}

var xxx_messageInfo_ParseBinaryReply proto.InternalMessageInfo

func (m *ParseBinaryReply) GetSections() []*Section {
	if m != nil {
		return m.Sections
	}
	return nil
}

// A Section represents a continuous section of memory.
type Section struct {
	// Section name; or empty if unnamed section or memory segment.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Start address of section.
	Addr uint64 `protobuf:"varint,2,opt,name=addr,proto3" json:"addr,omitempty"`
	// File offset of section.
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// Length of section in number of bytes; excluding section alignment padding.
	Length uint64 `protobuf:"varint,4,opt,name=length,proto3" json:"length,omitempty"`
	// Size in bytes of the section contents in the executable file; including
	// section alignment padding.
	//
	// file_size is larger than mem_size for sections padded to section alignment
	// in the executable file.
	FileSize uint64 `protobuf:"varint,5,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	// Size in bytes of the section contents when loaded into memory.
	//
	// mem_size is larger than file_size for sections containing uninitialized
	// data not part of the executable file.
	MemSize uint64 `protobuf:"varint,6,opt,name=mem_size,json=memSize,proto3" json:"mem_size,omitempty"`
	// Access permissions of the section in memory.
	Perm                 Perm     `protobuf:"varint,7,opt,name=perm,proto3,enum=bin.Perm" json:"perm,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Section) Reset()         { *m = Section{} }
func (m *Section) String() string { return proto.CompactTextString(m) }
func (*Section) ProtoMessage()    {}
func (*Section) Descriptor() ([]byte, []int) {
	return fileDescriptor_af36b52e36742298, []int{2}
}

func (m *Section) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Section.Unmarshal(m, b)
}
func (m *Section) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Section.Marshal(b, m, deterministic)
}
func (m *Section) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Section.Merge(m, src)
}
func (m *Section) XXX_Size() int {
	return xxx_messageInfo_Section.Size(m)
}
func (m *Section) XXX_DiscardUnknown() {
	xxx_messageInfo_Section.DiscardUnknown(m)
}

var xxx_messageInfo_Section proto.InternalMessageInfo

func (m *Section) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Section) GetAddr() uint64 {
	if m != nil {
		return m.Addr
	}
	return 0
}

func (m *Section) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *Section) GetLength() uint64 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *Section) GetFileSize() uint64 {
	if m != nil {
		return m.FileSize
	}
	return 0
}

func (m *Section) GetMemSize() uint64 {
	if m != nil {
		return m.MemSize
	}
	return 0
}

func (m *Section) GetPerm() Perm {
	if m != nil {
		return m.Perm
	}
	return Perm_PermR
}

func init() {
	proto.RegisterEnum("bin.Perm", Perm_name, Perm_value)
	proto.RegisterType((*ParseBinaryRequest)(nil), "bin.ParseBinaryRequest")
	proto.RegisterType((*ParseBinaryReply)(nil), "bin.ParseBinaryReply")
	proto.RegisterType((*Section)(nil), "bin.Section")
}

func init() { proto.RegisterFile("bin.proto", fileDescriptor_af36b52e36742298) }

var fileDescriptor_af36b52e36742298 = []byte{
	// 294 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0x41, 0x4b, 0xc3, 0x30,
	0x14, 0xc7, 0x97, 0xad, 0xeb, 0xd6, 0xb7, 0x21, 0xe5, 0xc1, 0x34, 0x2a, 0x42, 0xe9, 0xc5, 0xa2,
	0xb0, 0xc3, 0xbc, 0x0a, 0x82, 0x37, 0x4f, 0x8e, 0xee, 0xa0, 0xb7, 0xd1, 0xda, 0x37, 0x0d, 0x34,
	0x69, 0x4d, 0xea, 0xa1, 0xfb, 0x64, 0x7e, 0x3c, 0x69, 0xd2, 0x89, 0xb2, 0xdb, 0xff, 0xfd, 0x7e,
	0xe1, 0x85, 0xfc, 0x03, 0x41, 0x2e, 0xd4, 0xb2, 0xd6, 0x55, 0x53, 0xe1, 0x28, 0x17, 0x2a, 0xbe,
	0x05, 0x5c, 0x67, 0xda, 0xd0, 0xa3, 0x50, 0x99, 0x6e, 0x53, 0xfa, 0xfc, 0x22, 0xd3, 0xe0, 0x02,
	0xfc, 0x5c, 0xa8, 0xad, 0x28, 0x38, 0x8b, 0x58, 0x12, 0xa4, 0xe3, 0x5c, 0xa8, 0xa7, 0x22, 0xbe,
	0x87, 0xf0, 0xdf, 0xe1, 0xba, 0x6c, 0x31, 0x81, 0xa9, 0xa1, 0xb7, 0x46, 0x54, 0xca, 0x70, 0x16,
	0x8d, 0x92, 0xd9, 0x6a, 0xbe, 0xec, 0xee, 0xd8, 0x38, 0x98, 0xfe, 0xda, 0xf8, 0x9b, 0xc1, 0xa4,
	0xa7, 0x88, 0xe0, 0xa9, 0x4c, 0x52, 0xbf, 0xde, 0xe6, 0x8e, 0x65, 0x45, 0xa1, 0xf9, 0x30, 0x62,
	0x89, 0x97, 0xda, 0x8c, 0xa7, 0xe0, 0x57, 0xbb, 0x9d, 0xa1, 0x86, 0x8f, 0x2c, 0xed, 0xa7, 0x8e,
	0x97, 0xa4, 0xde, 0x9b, 0x0f, 0xee, 0x39, 0xee, 0x26, 0xbc, 0x84, 0x60, 0x27, 0x4a, 0xda, 0x1a,
	0xb1, 0x27, 0x3e, 0xb6, 0x6a, 0xda, 0x81, 0x8d, 0xd8, 0x13, 0x9e, 0xc3, 0x54, 0x92, 0x74, 0xce,
	0xb7, 0x6e, 0x22, 0x49, 0x5a, 0x75, 0x05, 0x5e, 0x4d, 0x5a, 0xf2, 0x49, 0xc4, 0x92, 0x93, 0x55,
	0x60, 0x5f, 0xb0, 0x26, 0x2d, 0x53, 0x8b, 0x6f, 0xae, 0xc1, 0xeb, 0x26, 0x0c, 0x60, 0x6c, 0x69,
	0x38, 0x38, 0xc4, 0x97, 0x90, 0x1d, 0xe2, 0x6b, 0x38, 0x5c, 0x3d, 0xc3, 0xdc, 0x95, 0x63, 0x7b,
	0xd2, 0xf8, 0x00, 0xb3, 0x3f, 0x8d, 0xe1, 0x99, 0x5b, 0x7c, 0x54, 0xf8, 0xc5, 0xe2, 0x58, 0xd4,
	0x65, 0x1b, 0x0f, 0x72, 0xdf, 0xfe, 0xd5, 0xdd, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe7, 0xdd,
	0x8b, 0xb6, 0xb8, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BinaryParserClient is the client API for BinaryParser service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BinaryParserClient interface {
	ParseBinary(ctx context.Context, in *ParseBinaryRequest, opts ...grpc.CallOption) (*ParseBinaryReply, error)
}

type binaryParserClient struct {
	cc *grpc.ClientConn
}

func NewBinaryParserClient(cc *grpc.ClientConn) BinaryParserClient {
	return &binaryParserClient{cc}
}

func (c *binaryParserClient) ParseBinary(ctx context.Context, in *ParseBinaryRequest, opts ...grpc.CallOption) (*ParseBinaryReply, error) {
	out := new(ParseBinaryReply)
	err := c.cc.Invoke(ctx, "/bin.BinaryParser/ParseBinary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BinaryParserServer is the server API for BinaryParser service.
type BinaryParserServer interface {
	ParseBinary(context.Context, *ParseBinaryRequest) (*ParseBinaryReply, error)
}

// UnimplementedBinaryParserServer can be embedded to have forward compatible implementations.
type UnimplementedBinaryParserServer struct {
}

func (*UnimplementedBinaryParserServer) ParseBinary(ctx context.Context, req *ParseBinaryRequest) (*ParseBinaryReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ParseBinary not implemented")
}

func RegisterBinaryParserServer(s *grpc.Server, srv BinaryParserServer) {
	s.RegisterService(&_BinaryParser_serviceDesc, srv)
}

func _BinaryParser_ParseBinary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ParseBinaryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BinaryParserServer).ParseBinary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bin.BinaryParser/ParseBinary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BinaryParserServer).ParseBinary(ctx, req.(*ParseBinaryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BinaryParser_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bin.BinaryParser",
	HandlerType: (*BinaryParserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ParseBinary",
			Handler:    _BinaryParser_ParseBinary_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bin.proto",
}
