version: 2
jobs:
  style:
    docker:
      - image: karlekdocker/pippi:0.0.3

    steps:
      - checkout
      - run:
          name: "Enforce Go Formatted Code"
          command: "! go fmt ./... 2>&1 | read"

  build-pippi:
    docker:
      - image: karlekdocker/pippi:0.0.3

    environment: # environment variables for the build itself
      NG_CLI_ANALYTICS: false # https://stackoverflow.com/a/57586959

    steps:
      - checkout # check out source code to working directory

      - restore_cache: # restores saved cache if no changes are detected since last run
          keys:
            - pippi-go-mod-cache-{{ checksum "go.sum" }}

      - restore_cache: # restores saved cache if no changes are detected since last run
          keys:
            - pippi-npm-cache-{{ checksum "./cmd/pippi/frontend/package.json.md5" }}

      - run:
          name: Run make
          command: |
            make -C cmd/pippi

      - save_cache:
          key: pippi-go-mod-cache-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

      - save_cache:
          key: pippi-npm-cache-{{ checksum "./cmd/pippi/frontend/package.json.md5" }}
          paths:
            - "./cmd/pippi/frontend/node_modules"

  build-ladda:
    docker:
      - image: karlekdocker/pippi:0.0.3

    steps:
      - checkout # check out source code to working directory

      - restore_cache: # restores saved cache if no changes are detected since last run
          keys:
            - ladda-go-mod-cache-{{ checksum "go.sum" }}

      - run:
          name: Run make
          command: |
            make -C cmd/ladda

      - save_cache:
          key: ladda-go-mod-cache-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

  build-sockerdricka:
    docker:
      - image: karlekdocker/pippi:0.0.3

    steps:
      - checkout # check out source code to working directory

      - restore_cache: # restores saved cache if no changes are detected since last run
          keys:
            - sockerdricka-go-mod-cache-{{ checksum "go.sum" }}

      - run:
          name: Run make
          command: |
            make -C cmd/sockerdricka-go

      - save_cache:
          key: sockerdricka-go-mod-cache-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"


  build-alvriket:
    docker:
      - image: karlekdocker/pippi:0.0.3

    steps:
      - checkout # check out source code to working directory

      - restore_cache: # restores saved cache if no changes are detected since last run
          keys:
            - alvriket-go-mod-cache-{{ checksum "go.sum" }}

      - run:
          name: Run make
          command: |
            make -C cmd/alvriket

      - save_cache:
          key: alvriket-go-mod-cache-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

  build-strings:
    docker:
      - image: karlekdocker/pippi:0.0.3

    steps:
      - checkout # check out source code to working directory

      - run:
          name: Calculate dependencies
          command: |
            cd ./cmd/strings
            rustc --version > rust-version
            test -e Cargo.lock || cargo generate-lockfile

      - restore_cache:
          keys:
            - strings-rust-cache-{{checksum "./cmd/strings/rust-version"}}-{{checksum "./cmd/strings/Cargo.lock"}}

      - run:
          name: Run make
          command: |
            make -C cmd/strings

      - save_cache:
          paths:
            - /root/.cargo/registry
            - ./cmd/strings/target
          key: strings-rust-cache-{{checksum "./cmd/strings/rust-version"}}-{{checksum "./cmd/strings/Cargo.lock"}}

workflows:
  version: 2
  build-workflow:
    jobs:
      - style:
          filters:
            branches:
              only: master

      - build-ladda:
          filters:
            branches:
              only: master

      - build-alvriket:
          filters:
            branches:
              only: master

      - build-pippi:
          filters:
            branches:
              only: master

      - build-strings:
          filters:
            branches:
              only: master

      - build-sockerdricka:
          filters:
            branches:
              only: master
