version: 2 # use CircleCI 2.0
jobs: # basic units of work in a run
  style:
    docker:
      - image: karlekdocker/pippi:0.0.3

    steps:
      - checkout
      - run:
          name: "Enforce Go Formatted Code"
          command: "! go fmt ./... 2>&1 | read"

  build: # runs not using Workflows must have a `build` job as entry point
    docker: # run the steps with Docker
      - image: karlekdocker/pippi:0.0.3

    environment: # environment variables for the build itself
      TEST_RESULTS: /tmp/test-results # path to where test results will be saved
      NG_CLI_ANALYTICS: false # https://stackoverflow.com/a/57586959

    steps: # steps that comprise the `build` job
      - checkout # check out source code to working directory
      - run: mkdir -p $TEST_RESULTS # create the test results directory

      - restore_cache: # restores saved cache if no changes are detected since last run
          keys:
            - go-mod-cache-{{ checksum "go.sum" }}

      - restore_cache: # restores saved cache if no changes are detected since last run
          keys:
            - frontend-cache-{{ checksum "./cmd/pippi/frontend/package.json.md5" }}

      - run:
          name: Calculate dependencies
          command: |
            cd ./cmd/strings
            rustc --version > rust-version
            test -e Cargo.lock || cargo generate-lockfile

      - restore_cache:
          keys:
            - rust-cache-{{checksum "./cmd/strings/rust-version"}}-{{checksum "./cmd/strings/Cargo.lock"}}

      - run:
          name: Run make
          command: |
            make # pull and build dependencies for the project

      - save_cache:
          key: go-mod-cache-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

      - save_cache:
          key: frontend-cache-{{ checksum "./cmd/pippi/frontend/package.json.md5" }}
          paths:
            - "./cmd/pippi/frontend/node_modules"

      - save_cache:
          paths:
            - /root/.cargo/registry
            - ./cmd/strings/target
          key: rust-cache-{{checksum "./cmd/strings/rust-version"}}-{{checksum "./cmd/strings/Cargo.lock"}}

      - store_artifacts: # upload test summary for display in Artifacts
          path: /tmp/test-results
          destination: raw-test-output

      - store_test_results: # upload test results for display in Test Summary
          path: /tmp/test-results
workflows:
  version: 2
  build-workflow:
    jobs:
      - build:
          filters:
            branches:
              only: master
      - style:
          filters:
            branches:
              only: master
