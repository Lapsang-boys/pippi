version: 2

references:
  workspace_root: &workspace_root
    ./
  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

jobs:
  style-go:
    docker:
      - image: circleci/golang:1.13

    steps:
      - checkout
      - run:
          name: "Enforce Go Formatted Code"
          command: "! go fmt ./... 2>&1 | read"

  generate-proto:
    docker:
      - image: karlekdocker/pippi:0.0.6

    steps:
      - *attach_workspace
      - checkout # check out source code to working directory

      - run:
          name: Finish early if path not changed.
          command: |
            bash ./.circleci/exit-if-path-not-changed.bash ./proto

      - run:
          name: Generate protobuf code
          command: |
            make -C ./proto

      - persist_to_workspace:
          root: *workspace_root
          paths:
            - ./proto

  build-pippi:
    docker:
      - image: karlekdocker/pippi:0.0.6

    environment: # environment variables for the build itself
      NG_CLI_ANALYTICS: false # https://stackoverflow.com/a/57586959

    steps:
      - checkout # check out source code to working directory

      - run:
          name: Finish early if path not changed.
          command: |
            bash ./.circleci/exit-if-path-not-changed.bash ./cmd/pippi

      - restore_cache: # restores saved cache if no changes are detected since last run
          keys:
            - pippi-go-mod-cache-{{ checksum "go.sum" }}

      - restore_cache: # restores saved cache if no changes are detected since last run
          keys:
            - pippi-npm-cache-{{ checksum "./cmd/pippi/frontend/package-lock.json" }}

      - run:
          name: Run make
          command: |
            make -C cmd/pippi

      - save_cache:
          key: pippi-go-mod-cache-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

      - save_cache:
          key: pippi-npm-cache-{{ checksum "./cmd/pippi/frontend/package-lock.json" }}
          paths:
            - "./cmd/pippi/frontend/node_modules"

  build-pi-upload:
    docker:
      - image: circleci/golang:1.13

    steps:
      - checkout # check out source code to working directory
      - *attach_workspace

      - run:
          name: Finish early if path not changed.
          command: |
            bash ./.circleci/exit-if-path-not-changed.bash ./cmd/pi-upload ./proto ./pkg

      - restore_cache: # restores saved cache if no changes are detected since last run
          keys:
            - pi-upload-go-mod-cache-{{ checksum "go.sum" }}

      - run:
          name: Run make
          command: |
            make -C cmd/pi-upload

      - save_cache:
          key: pi-upload-go-mod-cache-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

  build-pi-disasm:
    docker:
      - image: circleci/golang:1.13

    steps:
      - checkout # check out source code to working directory
      - *attach_workspace

      - run:
          name: Finish early if path not changed.
          command: |
            bash ./.circleci/exit-if-path-not-changed.bash ./cmd/pi-disasm ./proto ./pkg

      - restore_cache: # restores saved cache if no changes are detected since last run
          keys:
            - pi-disasm-mod-cache-{{ checksum "go.sum" }}

      - run:
          name: Run make
          command: |
            make -C cmd/pi-disasm

      - save_cache:
          key: pi-disasm-mod-cache-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

  build-pi-disasm-objdump:
    docker:
      - image: circleci/golang:1.13

    steps:
      - checkout # check out source code to working directory
      - *attach_workspace

      - run:
          name: Finish early if path not changed.
          command: |
            bash ./.circleci/exit-if-path-not-changed.bash ./cmd/pi-disasm-objdump ./proto ./pkg

      - restore_cache: # restores saved cache if no changes are detected since last run
          keys:
            - pi-disasm-objdump-mod-cache-{{ checksum "go.sum" }}

      - run:
          name: Run make
          command: |
            make -C cmd/pi-disasm-objdump

      - save_cache:
          key: pi-disasm-objdump-mod-cache-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

  build-pi-bin:
    docker:
      - image: circleci/golang:1.13

    steps:
      - checkout # check out source code to working directory
      - *attach_workspace

      - run:
          name: Finish early if path not changed.
          command: |
            bash ./.circleci/exit-if-path-not-changed.bash ./cmd/pi-bin ./proto ./pkg

      - restore_cache: # restores saved cache if no changes are detected since last run
          keys:
            - pi-bin-go-mod-cache-{{ checksum "go.sum" }}

      - run:
          name: Run make
          command: |
            make -C cmd/pi-bin

      - save_cache:
          key: pi-bin-go-mod-cache-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

  build-pi-strings:
    docker:
      - image: circleci/rust:1.38

    steps:
      - checkout # check out source code to working directory
      - *attach_workspace

      - run:
          name: Finish early if path not changed.
          command: |
            bash ./.circleci/exit-if-path-not-changed.bash ./cmd/pi-strings ./proto

      - run:
          name: Install dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y cmake

      - run:
          name: Calculate dependencies
          command: |
            cd ./cmd/pi-strings
            rustc --version > rust-version
            test -e Cargo.lock || cargo generate-lockfile

      - restore_cache:
          keys:
            - pi-strings-rust-cache-{{checksum "./cmd/pi-strings/rust-version"}}-{{checksum "./cmd/pi-strings/Cargo.lock"}}

      - run:
          name: Run make
          command: |
            make -C cmd/pi-strings

      - save_cache:
          paths:
            - /root/.cargo/registry
            - ./cmd/pi-strings/target
          key: pi-strings-rust-cache-{{checksum "./cmd/pi-strings/rust-version"}}-{{checksum "./cmd/pi-strings/Cargo.lock"}}

workflows:
  version: 2
  style-workflow:
    jobs:
    - style-go:
        filters:
          branches:
            ignore: gh-pages

  build-workflow:
    jobs:
    - generate-proto:
        filters:
          branches:
            ignore: gh-pages

    - build-pi-upload:
        filters:
          branches:
            ignore: gh-pages
        requires:
          - generate-proto

    - build-pi-bin:
        filters:
          branches:
            ignore: gh-pages
        requires:
          - generate-proto

    - build-pi-disasm:
        filters:
          branches:
            ignore: gh-pages
        requires:
          - generate-proto

    - build-pi-disasm-objdump:
        filters:
          branches:
            ignore: gh-pages
        requires:
          - generate-proto

    - build-pi-strings:
        filters:
          branches:
            ignore: gh-pages
        requires:
          - generate-proto

    - build-pippi:
        filters:
          branches:
            ignore: gh-pages
